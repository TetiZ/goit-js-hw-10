{"version":3,"file":"commonHelpers3.js","sources":["../src/js/1-timer.js","../src/js/2-snackbar.js"],"sourcesContent":["'use strict';\n\n// Імпорти\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Змінні\n\nconst input = document.querySelector('#datetime-picker');\n\nconst startBtn = document.querySelector('button');\nstartBtn.setAttribute('disabled', true);\n\nlet userSelectedDate;\n\nconst daysQuantity = document.querySelector('[data-days]');\nconst hoursQuantity = document.querySelector('[data-hours]');\nconst minutesQuantity = document.querySelector('[data-minutes]');\nconst secondsQuantity = document.querySelector('[data-seconds]');\n\nlet timeCounter;\n\n// ********** ВИБІР ДАТИ ************\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() <= new Date().getTime()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      userSelectedDate = selectedDates[0];\n      startBtn.removeAttribute('disabled');\n    }\n  },\n};\n\nconst datePicker = flatpickr(input, options);\n\n// ********** ВІДЛІК ЧАСУ ************\n\n// Інтервал - налаштування роботи таймера\n\nconst startTimer = () => {\n  const timerId = setInterval(() => {\n    const selectedDate = userSelectedDate.getTime();\n    const currentDate = Date.now();\n\n    const timeDifference = selectedDate - currentDate;\n    if (timeDifference > 0) {\n      timeCounter = convertMs(timeDifference);\n      updateTimerDisplay();\n    } else {\n      clearInterval(timerId);\n    }\n  }, 1000);\n};\n\n// налаштування конвертації часу в дні, години, хвилини, секунди\n\nconst convertMs = ms => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\n// налаштування оновлення значень на сторінці\n\nconst updateTimerDisplay = () => {\n  daysQuantity.textContent = `${timeCounter.days}`;\n  hoursQuantity.textContent = `${timeCounter.hours}`;\n  minutesQuantity.textContent = `${timeCounter.minutes}`;\n  secondsQuantity.textContent = `${timeCounter.seconds}`;\n};\n\n// активація кнопки і таймера\nstartBtn.addEventListener('click', startTimer);\n","'use strict';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('button');\n\n// Promises creation\n\nconst createPromise = (resolve, reject) => {\n  const delayValue = form.elements.delay.value;\n  const fulfillBtn = document.querySelector('[value=\"fulfilled\"]:checked');\n  const rejectBtn = document.querySelector('[value=\"rejected\"]:checked');\n\n  if (fulfillBtn) {\n    setTimeout(() => {\n      resolve(delayValue);\n      iziToast.success({\n        message: `✅ Fulfilled promise in ${delayValue}ms`,\n        position: 'topRight',\n      });\n    }, delayValue);\n  } else if (rejectBtn) {\n    setTimeout(() => {\n      reject(delayValue);\n      iziToast.error({\n        message: `❌ Rejected promise in ${delayValue}ms`,\n        position: 'topRight',\n      });\n    }, delayValue);\n  }\n};\n\n// активація кліку\nconst submitForm = e => {\n  e.preventDefault();\n  new Promise(createPromise);\n};\n\nform.addEventListener('submit', submitForm);\n"],"names":["input","startBtn","userSelectedDate","daysQuantity","hoursQuantity","minutesQuantity","secondsQuantity","timeCounter","options","selectedDates","iziToast","flatpickr","startTimer","timerId","selectedDate","currentDate","timeDifference","convertMs","updateTimerDisplay","ms","days","hours","minutes","seconds","form","createPromise","resolve","reject","delayValue","fulfillBtn","rejectBtn","submitForm","e"],"mappings":"6vBAWA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EAEjDC,EAAW,SAAS,cAAc,QAAQ,EAChDA,EAAS,aAAa,WAAY,EAAI,EAEtC,IAAIC,EAEJ,MAAMC,EAAe,SAAS,cAAc,aAAa,EACnDC,EAAgB,SAAS,cAAc,cAAc,EACrDC,EAAkB,SAAS,cAAc,gBAAgB,EACzDC,EAAkB,SAAS,cAAc,gBAAgB,EAE/D,IAAIC,EAIJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,GAAG,QAAS,GAAI,IAAI,KAAI,EAAG,UAC3CC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,GAEDR,EAAmBO,EAAc,GACjCR,EAAS,gBAAgB,UAAU,EAEtC,CACH,EAEmBU,EAAUX,EAAOQ,CAAO,EAM3C,MAAMI,EAAa,IAAM,CACvB,MAAMC,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAeZ,EAAiB,UAChCa,EAAc,KAAK,MAEnBC,EAAiBF,EAAeC,EAClCC,EAAiB,GACnBT,EAAcU,EAAUD,CAAc,EACtCE,KAEA,cAAcL,CAAO,CAExB,EAAE,GAAI,CACT,EAIMI,EAAYE,GAAM,CAMtB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAIML,EAAqB,IAAM,CAC/Bf,EAAa,YAAc,GAAGI,EAAY,OAC1CH,EAAc,YAAc,GAAGG,EAAY,QAC3CF,EAAgB,YAAc,GAAGE,EAAY,UAC7CD,EAAgB,YAAc,GAAGC,EAAY,SAC/C,EAGAN,EAAS,iBAAiB,QAASW,CAAU,ECvF7C,MAAMY,EAAO,SAAS,cAAc,OAAO,EACzB,SAAS,cAAc,QAAQ,EAIjD,MAAMC,EAAgB,CAACC,EAASC,IAAW,CACzC,MAAMC,EAAaJ,EAAK,SAAS,MAAM,MACjCK,EAAa,SAAS,cAAc,6BAA6B,EACjEC,EAAY,SAAS,cAAc,4BAA4B,EAEjED,EACF,WAAW,IAAM,CACfH,EAAQE,CAAU,EAClBlB,EAAS,QAAQ,CACf,QAAS,0BAA0BkB,MACnC,SAAU,UAClB,CAAO,CACF,EAAEA,CAAU,EACJE,GACT,WAAW,IAAM,CACfH,EAAOC,CAAU,EACjBlB,EAAS,MAAM,CACb,QAAS,yBAAyBkB,MAClC,SAAU,UAClB,CAAO,CACF,EAAEA,CAAU,CAEjB,EAGMG,EAAaC,GAAK,CACtBA,EAAE,eAAc,EAChB,IAAI,QAAQP,CAAa,CAC3B,EAEAD,EAAK,iBAAiB,SAAUO,CAAU"}